#!/bin/sh
#
# Copyright (c) 2021: Jacob.Lundqvist@gmail.com 2021-04-30
# License: MIT
#
# Version: 0.1.0 2021-04-30
#    Initial release
#
# Part of ishTools
#

task_restore_root_home() {
    msg_txt="Restoration of /root"
    if [ "$IT_ROOT_HOME_TGZ" != "" ]; then
        unpack_home_dir root /root "$IT_ROOT_HOME_TGZ" "$IT_ROOT_HOME_UNPACKED_PTR" "$IT_ROOT_REPLACE"
    fi
    echo
}



#==========================================================
#
#     main
#
#==========================================================

if test -z "$DEPLOY_PATH" ; then
    # Most likely not sourced...
    #DEPLOY_PATH="$(busybox dirname "$0")/.."               # relative
    #DEPLOY_PATH="$( cd "$DEPLOY_PATH" && pwd )"  # absolutized and normalize
    DEPLOY_PATH="$(dirname `pwd`)"
    echo ">>DEPLOY_PATH=$DEPLOY_PATH"
fi
. "$DEPLOY_PATH/scripts/extras/utils"
. "$DEPLOY_PATH/scripts/extras/unpack_home_dir"


if [ "$IT_INITIAL_SCRIPT" = "" ]; then
    #
    # Since sourced mode cant be detected in a practiacl way under ash,
    # I use this workaround, first script is expected to set it, if set
    # script can assume to be sourced
    #
    IT_INITIAL_SCRIPT=1
    
    case "$1" in
	"-?"|"-h"|"--help")
	    echo "Restores /root from a tgz file. Optional ptr to indicate if it has"
	    echo "already been unpacked."
	    echo "Normal operation is to just untar it into /root."
	    echo "IT_ROOT_REPLACE=1 moves /root to /root-OLD (previous such removed)"
	    echo "Before unpacking."
	    echo
	    echo "Env paramas"
	    echo "-----------"
	    echo "IT_ROOT_HOME_TGZ$(test -z "$IT_ROOT_HOME_TGZ" && echo ' - unpack this into /root if found' || echo =$IT_ROOT_HOME_TGZ )"
	    echo
	    echo "IT_ROOT_UNPACKED_PTR$(test -z "$IT_ROOT_UNPACKED_PTR" && echo ' - Indicates root.tgz is unpacked' || echo =$IT_ROOT_UNPACKED_PTR )"
	    echo "IT_ROOT_REPLACE$(test -z "$IT_ROOT_REPLACE" && echo ' - move previous root and replace it' || echo =$IT_ROOT_REPLACE )"
	    ;;
	*)
	    task_restore_root_home
    esac
fi

